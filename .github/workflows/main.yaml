name: Main

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: go mod tidy

      - name: Run unit tests
        run: go test ./src -v

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' 

      - name: Create virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install pytest
      
    - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build Go application
        run: |
          go build -o dcpm

      - name: Move binary to integration_tests directory
        run: |
          mkdir -p integrations_tests
          mv dcpm integrations_tests/

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Install Docker Compose
        run: |
          VERSION=$(curl --silent "https://api.github.com/repos/docker/compose/releases/latest" | jq -r '.tag_name')
          sudo curl -L "https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Run integration tests
        run: |
          cd integrations_tests
          pytest .
